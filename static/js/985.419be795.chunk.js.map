{"version":3,"file":"static/js/985.419be795.chunk.js","mappings":"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","sources":["redux/contacts/contactsSelectors.js","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.styled.jsx","components/Controls/Controls.styled.jsx","components/Controls/Controls.jsx","components/EditForm/EditForm.styled.jsx","components/EditForm/EditForm.jsx","utilities/cardNumberFormating.js","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filterValue) => {\n    const normalizedFilter = filterValue.toLocaleLowerCase().trim();\n    const visibleContacts = contacts.filter(contact =>\n      contact.name.toLocaleLowerCase().includes(normalizedFilter)\n    );\n    return visibleContacts;\n  }\n);\n\nexport const selectFilteredContactsByNumber = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filterValue) => {\n    const normalizedFilter = filterValue.trim();\n    const visibleContacts = contacts.filter(contact =>\n      contact.number.includes(normalizedFilter)\n    );\n    return visibleContacts;\n  }\n);\n","import styled from '@emotion/styled';\n\nexport const FormStyled = styled.form`\n  padding: 16px 10px;\n  display: flex;\n  flex-direction: column;\n  gap: 25px;\n  font-size: 18px;\n  border: 1px solid #1664e2;\n  border-radius: 8px;\n`;\n\nexport const Form = styled.form`\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const CustomError = styled.div`\n  position: absolute;\n  top: 100%;\n  left: 0;\n  padding: 3px;\n  width: 160px;\n  border: 1px solid red;\n  border-radius: 4px;\n  color: red;\n  font-size: 12px;\n`;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/contacts/contactsOperation';\nimport { selectContacts } from 'redux/contacts/contactsSelectors';\nimport { toast } from 'react-hot-toast';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { Form } from 'components/ContactForm/ContactForm.styled';\nimport { Button, TextField } from '@mui/material';\n\n\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const form = evt.currentTarget;\n    const name = form.elements.name.value;\n    const number = form.elements.number.value;\n\n    const isNotUnique = contacts.some(contact => contact.name === name);\n    if (isNotUnique) {\n      return toast.success(`\"${name}\" is already in contacts.`);\n    }\n\n    dispatch(\n      addContact({\n        id: nanoid(),\n        name,\n        number,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit} autoComplete=\"off\">\n      <TextField\n        id=\"standard-basic\"\n        type=\"text\"\n        name=\"name\"\n        label=\"Name\"\n        variant=\"standard\"\n        required\n        fullWidth\n        sx={{\n          mb: '1rem',\n          color: '#008080',\n          backgroundColor: '#fffefe',\n        }}\n      />\n      <TextField\n        id=\"standard-basic\"\n        type=\"tel\"\n        name=\"number\"\n        label=\"Number\"\n        variant=\"standard\"\n        required\n        helperText=\"the phone number must contain between 10 and 13 digits\"\n        inputProps={{\n          inputMode: 'numeric',\n          pattern: '[0-9]{10,13}',\n        }}\n        fullWidth\n        sx={{\n          mb: '1rem',\n          color: '#008080',\n          backgroundColor: '#fffefe',\n        }}\n      />\n\n      <Button\n        type=\"submit\"\n        variant=\"contained\"\n        sx={{\n          mt: '20px',\n        }}\n      >\n        Add contact\n      </Button>\n    </Form>\n  );\n};\n\nexport default ContactForm;\n","import styled from '@emotion/styled';\n\nexport const Item = styled.li`\n  min-width: 380px;\n  display: flex;\n  align-items: center;\n  &:not(:last-child) {\n    margin-bottom: 5px;\n  }\n`;\n\nexport const ContactInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n`;\n\nexport const ContactName = styled.p`\n  display: flex;\n  gap: 10px;\n  max-width: 245px;\n  font-size: 18px;\n  font-weight: 600;\n  color: black;\n`;\nexport const ContactTel = styled.p`\n  display: flex;\n  gap: 10px;\n  max-width: 245px;\n  font-size: 16px;\n  color: black;\n`;\n\nexport const ContactEditInfo = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n`;\nexport const ContactEditInput = styled.input`\n  border: 1px solid orangered;\n  border-radius: 4px;\n  outline: 1px solid orangered;\n`;\n\nexport const ContactEditLabel = styled.label`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n  font-size: 12px;\n`;\n","import styled from '@emotion/styled';\n\nexport const ControlWrapper = styled.div`\n  display: flex;\n  gap: 4px;\n  margin-left: auto;\n`;\n","import PropTypes from 'prop-types';\nimport { ControlWrapper } from './Controls.styled';\nimport { IconButton } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport SaveIcon from '@mui/icons-material/Save';\n\nexport const Controls = ({ id, onDeleteContact, onEditContact }) => {\n  return (\n    <ControlWrapper>\n      <IconButton\n        type=\"button\"\n        size=\"large\"\n        color=\"primary\"\n        aria-label=\"edit\"\n        onClick={onEditContact}\n      >\n        <EditIcon />\n      </IconButton>\n\n      <IconButton\n        type=\"button\"\n        size=\"large\"\n        color=\"primary\"\n        aria-label=\"delete\"\n        onClick={() => onDeleteContact(id)}\n      >\n        <DeleteIcon />\n      </IconButton>\n    </ControlWrapper>\n  );\n};\n\nexport const ControlsSave = ({ id, onDeleteContact }) => {\n  return (\n    <ControlWrapper>\n      <IconButton type=\"submit\" size=\"large\" color=\"primary\" aria-label=\"save\">\n        <SaveIcon />\n      </IconButton>\n      <IconButton\n        type=\"button\"\n        size=\"large\"\n        color=\"primary\"\n        aria-label=\"delete\"\n        onClick={() => onDeleteContact(id)}\n      >\n        <DeleteIcon />\n      </IconButton>\n    </ControlWrapper>\n  );\n};\n\nControls.propTypes = {\n  id: PropTypes.string.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n  onEditContact: PropTypes.func.isRequired,\n};\n\nControlsSave.propTypes = {\n  onDeleteContact: PropTypes.func.isRequired,\n  id: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\nimport { Form, Field } from 'formik';\n\nexport const EditFormStyled = styled(Form)`\n  display: flex;\n  align-items: center;\n  width: 100%;\n`;\n\nexport const EditFormLabel = styled.label`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n  font-size: 12px;\n`;\nexport const EditInput = styled(Field)`\n  width: 180px;\n  border: 1px solid plum;\n  border-radius: 4px;\n  outline: 1px solid plum;\n`;\n\nexport const EditFormWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n`;\n\nexport const CustomError = styled.div`\n  position: absolute;\n  top: 0;\n  left: 100%;\n  padding: 3px;\n  width: 130px;\n  border: 1px solid plum;\n  border-radius: 4px;\n  color: plum;\n  font-size: 10px;\n  font-weight: 700;\n`;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { HiUser } from 'react-icons/hi';\nimport { ImPhone } from 'react-icons/im';\nimport { Formik, ErrorMessage } from 'formik';\nimport { object, string } from 'yup';\nimport {\n  EditFormStyled,\n  EditInput,\n  EditFormLabel,\n  CustomError,\n  EditFormWrapper,\n} from './EditForm.styled';\n\nconst nameRegExp = /^[a-zA-Zа-яА-Я0-9]{3,}$/;\nconst phoneRegExp = /[0-9]{10,13}/;\n\nlet userValidSchema = object({\n  name: string().matches(nameRegExp, 'Name is not valid!').required(),\n  number: string()\n    .matches(phoneRegExp, 'Phone number is not valid!')\n    .required(),\n});\n\nfunction EditForm({ name, number, onEditContact, children }) {\n  const handleSubmit = (values, { resetForm }) => {\n    const { name, number } = values;\n    onEditContact(name, number);\n    resetForm();\n  };\n  return (\n    <Formik\n      initialValues={{ name, number }}\n      validationSchema={userValidSchema}\n      onSubmit={handleSubmit}\n    >\n      <EditFormStyled autoComplete=\"off\">\n        <EditFormWrapper>\n          <EditFormLabel>\n            <HiUser fill=\"#1664e2\" />\n            <EditInput\n              type=\"text\"\n              name=\"name\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            />\n            <ErrorMessage component={CustomError} name=\"name\" />\n          </EditFormLabel>\n          <EditFormLabel>\n            <ImPhone fill=\"#1664e2\" />\n            <EditInput\n              type=\"tel\"\n              name=\"number\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            />\n            <ErrorMessage component={CustomError} name=\"number\" />\n          </EditFormLabel>\n        </EditFormWrapper>\n        {children}\n      </EditFormStyled>\n    </Formik>\n  );\n}\n\nEditForm.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  children: PropTypes.node,\n  onEditContact: PropTypes.func.isRequired,\n};\n\nexport default EditForm;\n","export const cardNumberFormating = phoneNumberString => {\n  var cleaned = ('' + phoneNumberString).replace(/\\D/g, '');\n  var match = cleaned.match(/^(\\d{1,3}|)?(\\d{3})(\\d{3})(\\d{4})$/);\n  if (match) {\n    var intlCode = match[1] ? `+${match[1]} ` : '';\n    return [intlCode, '(', match[2], ') ', match[3], '-', match[4]].join('');\n  }\n  return null;\n};\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { HiUser } from 'react-icons/hi';\nimport { ImPhone } from 'react-icons/im';\nimport {\n  ContactTel,\n  ContactName,\n  ContactInfo,\n} from 'components/ContactItem/ContactItem.styled';\nimport { Controls, ControlsSave } from '../Controls/Controls';\nimport EditForm from 'components/EditForm';\nimport { editContact, deleteContact } from 'redux/contacts/contactsOperation';\nimport { Box } from '@mui/material';\nimport { cardNumberFormating } from 'utilities/cardNumberFormating';\n\nfunction ContactItem({ name, number, id }) {\n  const [editName, setEditName] = useState(name);\n  const [editNumber, setEditNumber] = useState(number);\n  const [isEdit, setIsEdit] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const handleDeleteContact = id => {\n    dispatch(deleteContact(id));\n  };\n\n  const handleEditContact = (newName, newNumber) => {\n    if (!isEdit) {\n      setIsEdit(true);\n    } else {\n      setEditName(prevName => (newName ? newName : prevName));\n      setEditNumber(prevNumber => (newNumber ? newNumber : prevNumber));\n      setIsEdit(false);\n\n      dispatch(\n        editContact({\n          id: id,\n          name: newName ? newName : name,\n          number: newNumber ? newNumber : number,\n        }),\n      );\n    }\n  };\n\n  return (\n    <Box\n      component='li'\n      sx={{ display: 'flex', justifyContent: 'space-between', mb: '10px' }}\n    >\n      {/* if contact saved show contact info */}\n\n      {!isEdit && (\n        <>\n          <ContactInfo>\n            <ContactName>\n              <HiUser fill='#008080' />\n              {name}:\n            </ContactName>\n\n            <ContactTel>\n              <ImPhone fill='#008080' />\n              {cardNumberFormating(number)}\n            </ContactTel>\n          </ContactInfo>\n          <Controls\n            id={id}\n            onDeleteContact={handleDeleteContact}\n            onEditContact={handleEditContact}\n          />\n        </>\n      )}\n\n      {/* if contact is edit show edit form */}\n      {isEdit && (\n        <EditForm\n          name={editName}\n          number={editNumber}\n          onEditContact={handleEditContact}\n        >\n          <ControlsSave id={id} onDeleteContact={handleDeleteContact} />\n        </EditForm>\n      )}\n    </Box>\n  );\n}\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n\nexport default ContactItem;\n","import ContactItem from 'components/ContactItem';\nimport { useSelector } from 'react-redux';\nimport {\n  selectFilteredContacts,\n  selectFilteredContactsByNumber,\n} from '../../redux/contacts/contactsSelectors';\n\nfunction ContactList() {\n  const contacts = useSelector(selectFilteredContacts);\n  const contactsByNumber = useSelector(selectFilteredContactsByNumber);\n\n  const uniqueContacts = [...contacts, ...contactsByNumber].filter(\n    (name, index, array) => array.indexOf(name) === index,\n  );\n\n  return (\n    <ul>\n      {uniqueContacts.map(({ id, name, number }) => (\n        <ContactItem key={id} name={name} number={number} id={id} />\n      ))}\n    </ul>\n  );\n}\n\nexport default ContactList;\n","import { useDispatch } from 'react-redux';\nimport {\n  filterContacts,\n  filterContactsByNumber,\n} from '../../redux/contacts/filterSlice';\nimport { Box, TextField } from '@mui/material';\n\nfunction Filter() {\n  const dispatch = useDispatch();\n\n  const handleSetFilter = evt => {\n    dispatch(filterContacts(evt.currentTarget.value));\n  };\n\n  const handleSetFilterByNumber = evt => {\n    dispatch(filterContactsByNumber(evt.currentTarget.value));\n  };\n\n  return (\n    <Box sx={{ display: 'flex', gap: '20px' }}>\n      <TextField\n        id='standard-basic'\n        type='text'\n        label='Find contacts by name'\n        variant='standard'\n        onChange={handleSetFilter}\n        sx={{\n          mb: '1rem',\n          color: '#008080',\n          backgroundColor: '#fffefe',\n        }}\n      />\n\n      <TextField\n        id='standard-basic'\n        type='text'\n        label='Find contacts by number'\n        variant='standard'\n        onChange={handleSetFilterByNumber}\n        sx={{\n          mb: '1rem',\n          color: '#008080',\n          backgroundColor: '#fffefe',\n        }}\n      />\n    </Box>\n  );\n}\n\nexport default Filter;\n","import { Badge, Box, Typography } from '@mui/material';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport Loader from 'components/Loader/Loader';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/contactsOperation';\nimport {\n  selectIsLoading,\n  selectContacts,\n} from 'redux/contacts/contactsSelectors';\nimport PeopleIcon from '@mui/icons-material/People';\n\nfunction ContactsPage() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const contacts = useSelector(selectContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Box\n      sx={{\n        pt: '20px',\n        display: 'flex',\n        flexDirection: 'column',\n        gap: '15px',\n      }}\n    >\n      <Typography\n        variant=\"h2\"\n        sx={{\n          color: '#008080',\n          textAlign: 'center',\n\n        }}\n      >\n        Phonebook\n      </Typography>\n      <ContactForm />\n      <Typography\n        variant=\"h5\"\n        component=\"h2\"\n        sx={{\n          fontWeight: 600,\n          display: 'flex',\n          gap: '15px',\n          alignItems: 'center',\n          color: '#008080',\n        }}\n      >\n        Contacts{' '}\n        <Badge\n          color=\"primary\"\n          size=\"large\"\n          badgeContent={contacts.length}\n        >\n          <PeopleIcon\n            sx={{\n              marginRight: '8px',\n            }}\n          />\n        </Badge>\n      </Typography>\n\n      <Filter />\n      {isLoading && <Loader />}\n      <ContactList />\n    </Box>\n  );\n}\n\nexport default ContactsPage;\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectFilter","filter","selectFilteredContacts","createSelector","filterValue","normalizedFilter","toLocaleLowerCase","trim","contact","name","includes","selectFilteredContactsByNumber","number","Form","styled","dispatch","useDispatch","useSelector","onSubmit","evt","preventDefault","form","currentTarget","elements","value","some","toast","addContact","id","nanoid","reset","autoComplete","TextField","type","label","variant","required","fullWidth","sx","mb","color","backgroundColor","helperText","inputProps","inputMode","pattern","Button","mt","ContactInfo","ContactName","ContactTel","ControlWrapper","Controls","onDeleteContact","onEditContact","IconButton","size","onClick","Edit","Delete","ControlsSave","Save","EditFormStyled","EditFormLabel","EditInput","Field","EditFormWrapper","CustomError","userValidSchema","object","string","matches","children","initialValues","validationSchema","values","resetForm","fill","title","component","cardNumberFormating","phoneNumberString","match","replace","join","useState","editName","setEditName","editNumber","setEditNumber","isEdit","setIsEdit","handleDeleteContact","deleteContact","handleEditContact","newName","newNumber","prevName","prevNumber","editContact","Box","display","justifyContent","contactsByNumber","uniqueContacts","index","array","indexOf","map","gap","onChange","filterContacts","filterContactsByNumber","useEffect","fetchContacts","pt","flexDirection","Typography","textAlign","fontWeight","alignItems","Badge","badgeContent","length","People","marginRight","Loader"],"sourceRoot":""}